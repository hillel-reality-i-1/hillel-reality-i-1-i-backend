# Generated by Django 4.2.7 on 2023-11-16 09:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        ("expert", "0001_initial"),
        ("cities_light", "0011_alter_city_country_alter_city_region_and_more"),
        ("files", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="User",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                ("last_login", models.DateTimeField(blank=True, null=True, verbose_name="last login")),
                ("email", models.EmailField(max_length=50, unique=True)),
                ("first_name", models.CharField(max_length=20)),
                ("last_name", models.CharField(max_length=20, null=True)),
                ("username", models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ("is_active", models.BooleanField(default=True)),
                ("is_staff", models.BooleanField(default=False)),
                ("is_superuser", models.BooleanField(default=False)),
                ("date_joined", models.DateTimeField(default=django.utils.timezone.now, editable=False)),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each "
                        "of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "User",
                "verbose_name_plural": "Users",
            },
        ),
        migrations.CreateModel(
            name="UserProfileExtended",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("about_my_self_ext", models.TextField(blank=True, null=True)),
                ("profession", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="expert.profession")),
                ("resume", models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="files.file")),
                ("service", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="expert.service")),
                (
                    "user",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
        migrations.CreateModel(
            name="UserProfile",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                (
                    "phone_number",
                    phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=15, null=True, region=None),
                ),
                ("about_my_self", models.TextField(blank=True, null=True)),
                (
                    "city",
                    models.ForeignKey(
                        blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to="cities_light.city"
                    ),
                ),
                ("country", models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to="cities_light.country")),
                (
                    "profile_picture",
                    models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to="files.image"),
                ),
                (
                    "user",
                    models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
                ),
            ],
        ),
    ]
